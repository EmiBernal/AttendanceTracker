The application must allow the user to select an Excel file containing attendance and employee schedule data. Once uploaded, the application should process the data and visualize it using interactive graphics, without displaying rows or columns, inspired by the Miro API for graphics.  

The workflow consists of three main steps. First, the user uploads an Excel file through a button, and the system validates that the file contains the expected sheets. Second, the application processes the data by extracting relevant information from different sheets and columns. The **Attendance Summary (Sheet 1)** contains details for each employee, including their identifier (`A`), name (`B`), department (`C`), required (`D`) and actual worked hours (`E`), late arrivals (`F`-`G`), early departures (`H`-`I`), overtime hours (`J`-`K`), and attendance statistics (`L`-`N`). The **Shift Table (Sheet 2)** organizes scheduled shifts with the identifier (`A`), name (`B`), department (`C`), and a timeline from columns `D` to `AH`, representing the days of the month. The **Records List (Sheet 3)** starts from row `5` with employee names and from row `6` with their work schedules, structured as initial entry, midway exit, midway entry, and final exit. The **Individual Attendance Report (Sheet 4)** logs attendance records per employee, including personal details (`A`-`D`), AM/PM entry and exit times (`E`-`H`), and incident tracking such as late minutes (`I`), early departures (`J`), and accumulated minutes (`K`), along with comments (`L`).  

The third step is graphical visualization, which eliminates tables and presents all data through interactive elements. The **Attendance Summary** uses pie and bar charts to display attendance, delays, and overtime, along with relationship diagrams between employees and departments. The **Scheduled Shifts** are represented in an interactive timeline showing work shifts, absences, and permissions with color-coded markers. The **Attendance Records** are displayed as individual timelines for each employee, highlighting entry and exit times. The **Individual Reports** feature dynamic cards summarizing the employeeâ€™s daily status, including visual alerts for incidents.  

For technical requirements, the application must support Excel file selection, extract data from the specified sheets and columns, and display the information as interactive graphics rather than tables. The design should be inspired by the Miro API for visual representation. This document provides all necessary details for an AI agent to develop the application without issues.